建立[智控中心]，負責開發及維護20個以上系統報表
建立資料串接、處理及分析之自動化流程，減低90%資料查找時間
將影像辨識技術應用於瑕疵檢測，減低90%判讀數量及時間
將機器學習應用於低頻資料分析，打造自動化監控產品
設計API及腳本，將分析結果串聯至現場機台進行自動化操作

Establish a [Smart Control Center] responsible for developing and maintaining over 20 systems.
Establish an automated process for data integration, processing, and analysis to reduce data retrieval time by 90%.
Apply image recognition technology to defect detection, reducing the quantity and time required for interpretation by 90%.
Apply machine learning to low-frequency data analysis to create automated monitoring products.
Design APIs and scripts to connect analysis results to on-site machines for automated operations.

產品開發
能源管理系統: 負責前端UI/UX的開發，將機器學習導入系統進行能源分析。
虛實整合平台: 負責後端NOSQL資料庫(cassandra, kairosdb)開發及監控平台zabbix導入
聲學監測裝置: 負責系統設計、訊號處理、模型訓練，到現場上線。實際應用於輸送設備及馬達
Achievements : 上述產品成功打入多家公司，實質帶來數千萬元營業額

[Product Development]
Energy Management System: Develop the front-end UI/UX and incorporate machine learning into the system for energy analysis.
Virtual-Real Integration Platform: Develop the back-end NoSQL database (Cassandra, KairosDB) and integrate the Zabbix monitoring platform.
Acoustic Monitoring Device: Responsible for system design, signal processing, model training, and field deployment. Successfully applied in conveyance equipment and motors.
Achievements: The above products successfully penetrated multiple enterprises, generating substantial revenue of tens of millions.

證照: LEED BD+C
擔任[美國綠建築LEED認證]專案負責人，帶領多家廠商取得金級認證

Certification: LEED BD+C
Serve as the project manager for [LEED Certification in U.S. Green Building], leading multiple companies to achieve Gold-level certification.

--------------------------------------------------
我擔任友達軟體工程師有5年的時間，在此之前我有3年軟體產品開發的經驗。
右側是我參加過比較長期的訓練課程，
On the right side are the longer-term training courses I have participated in.
大數據專班，主要是分散式系統，hadoop相關的課程
The Big Data Program mainly focuses on distributed systems and Hadoop technology.
AIA技術班，課程主要是ML, DL, 神經網路, 影像辨識。結訓專案是Donkey Car
The AIA Technical Program. the courses focus on Machine Learning (ML), Deep Learning (DL), neural networks, and image recognition. The final project is Donkey Car.

接下來，我會分享部分我參與過的專案
Next, I will share some of the projects I have been involved in.
===============
這是用來傳送廢棄物的輸送機台，物品會卡在轉角處，一旦卡住了人就需要過來處理
This is a conveyor machine used for transporting waste. Waste may get stuck at this corner. Once it gets stuck, someone needs to come over to handle it.
So they hope to have a system that can automatically detect blockages, allowing personnel to avoid having to check regularly.

- The first point of consideration is what to use for detection. IMage? voice?
Deployment environment. Since it is in an open space, it will be affected by sunlight.
Affected by the environment.
受到陽光照射的影響,

- Frequency of abnormal occurrences異常發生的頻率
In this case, it occurs once every two hours on average. it's not hard to collect error data. Supervised learning

- Who is responsible for judging the anomalies?谁負責評斷異常?
由人所評斷, 所以要將訊號轉為更貼近實際人所聽到的聲音
It is judged by humans, so the signals need to be converted into sounds what people actually hear. 
We tend to pay more attention to low-frequency sounds. 所以這裡我使用MFCC方法，然後接續ENSEMBLE mutiple MODEL to predict

- 另外，用同樣手法參加2023年的比賽，藉咳嗽聲音來進行病症的分類，從370對中獲得第3名
before last year, I used this concept to participate the competition, classifying diseases based on cough sounds, and achieved third place out of 370 entries.
==============

Defect detection: First of all, these photos come from Google.
瑕疵檢測, 首先這些照片的來源是google

We produce a flawless image using stitching, and then subtract the two to highlight the defect areas.
我們用拼接的方式產出沒有瑕疵的圖片，並將兩者相減，凸顯出瑕疵的部分

- Model Choose? Resnet, DenseNet, Inception
特徵簡單，直接建立5層神經網路，減低系統的負擔。工具很重要，但解決問題更重要
The features are simple, so I didn't use a complex model. Instead, I directly built a 5-layer neural network to reduce the system's burden.

- In this case. the clear images is everything. 最重要的是，清楚的原圖才是一切
Compared to using complex image processing, my experience shows. maybe add a mask or a backlight would have a good performance.
無論做多少影像處理，不如直接加個遮罩或背光源

- 多少的準確度才夠?
How much accuracy is enough?
Our accuracy can reach 98%. However, this is still not enough.So my approach is to send any photos with doubts for manual interpretation.
98%? 99%? 只要有疑慮的都人工判讀，但對現場人員原本要判100片降低為10片
Even so, the number of photos requiring manual interpretation can still be reduced from 100 to 10.

==============

- 能源管理系統
這個產品主要協助客戶可以依循ISO50001認證標準進行能源管理
This product primarily assists customers in implementing energy management according to the ISO 50001 standard.
這是一個成功的產品，原因很簡單，他有賣到台積電，每年帶來數千萬的收益
This is a successful product for a simple reason: it has been sold to TSMC, generating tens of millions in revenue each year.
這產品的主要由多個控制項組成，我主要負責NOSQL資料庫的建立，及前端UI UX的開發
(This product is mainly composed of multiple control elements.) I am responsible for establishing the NoSQL database and developing the UI/UX, the control elements related machine learning.

Why was this product chosen?
- The key point is to consistently exceed customer expectations.關鍵點是不斷地超乎客戶預期
他們想要能源報表，我們就給他可自行編輯的網頁
They wanted energy dashborad, so we provided them with a web page that they could edit on their own.
We can customize the data they want to see.
他們想要機台耗電資料，我們就提供讓他們可以針對機台狀態進行分群的功能
They wanted data on machine power consumption, so we provided a function that allows them to cluster based on the machine's status.
Conduct comparisons of the machines.

這也導致我現在習慣不斷地思考下一步，什麼才是他們真正的需求

Of course, it is not new stuff, but these are my profound personal experiences.
- 當然這很多人都知道，但程式碼模組化, 與客戶的交流是我的親身經驗

==============
What I am currently doing the most is still going back to the data itself.
那我現在做最多的，還是回到資料本身
- 將資料定義、指標統一 (ex: 效益開始計算的時間)
Standardize and Unify the data definitions and metrics between different factories.

如果有任何工廠想開始作智慧工廠，我都強烈建議先從這項目開始，因為這是無論在任何階段 資料和指標都會使用到

- 這其實不容易且範圍很大，需要不斷地溝通和全面的考量和技術
This is actually not easy and covers a wide range; it requires constant communication, comprehensive consideration, and technology.

Here are the front-end and back-end technologies I have used. Actually, each component could be an independent position.
這是前後端所利用到的技術，每一塊其實都可以是獨立的職位，中間是我比較熟悉的, 外側大約是中等
IIS -> MySQL, SQLite -> Python(Flask, FastAPI, Django, RESTfulAPI) -> JS, HTML, CSS (Vue.js)
Docker, Postgres, Oracle, NoSQL(Cassandra, Kairosdb), C#, ASP, Nodejs, Reactjs
Hadoop , AWS, Azure, ML, DL

-------------------------------------------
https://www.slidescarnival.com/
https://www.canva.com/design/DAGcIQG73QU/52UeUJrMvUECnoaREDwchg/edit?referrer=slidescarnival
https://www.canva.com/design/DAGcIXw0s_8/phGZleUrwV-_EyyzyzHolQ/edit?referrer=slidescarnival

--------------------------------------------
工作是面對部門還是整個工廠
第一個接到的任務會是什麼
