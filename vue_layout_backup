components/layout/AppAside.vue

<script setup>
import { isCollapse } from '@/components/layout/isCollapse.js'
</script>
<template>
  <el-aside width="200px">
    <el-scrollbar>
      <el-menu :collapse="isCollapse" router>
        <a href="/" class="logo">
          <!-- <img src="@/assets/logo.svg" /> -->
          <h1>Domain</h1></a
        >
        <el-sub-menu index="1">
          <template #title>
            <el-icon><IEpUserFilled /></el-icon>
            <span>人才管理</span>
          </template>
          <el-menu-item index="statistic">
            <el-icon><IEpTrendCharts /></el-icon>統計報表
          </el-menu-item>
          <el-menu-item index="pplskill">
            <el-icon><IEpTrendCharts /></el-icon>個人專業能力
          </el-menu-item>
          <el-menu-item index="explain">
            <el-icon><IEpTrendCharts /></el-icon>認證評分說明
          </el-menu-item>
        </el-sub-menu>
        <el-sub-menu index="2">
          <template #title>
            <el-icon><IEpTools /></el-icon>
            <span>系統連結</span>
          </template>
          <el-menu-item><a type="link" href="http://tw100043771.corpnet.auo.com:5100/UAC.asp" target="_blank">技師技能盤點</a></el-menu-item>
          <el-menu-item><a type="link" href="http://tw100039807.corpnet.auo.com/LCD2IMS/Dashboard" target="_blank">工程師技能盤點</a></el-menu-item>
        </el-sub-menu>
      </el-menu>
    </el-scrollbar>
  </el-aside>
</template>
<style scoped>
.el-aside {
  background-color: #eee;
  height: 100vh;
  width: auto;
}
.el-menu {
  width: 200px;
  background-color: #eee;
  border-right: none;
  &.el-menu--collapse {
    width: 60px;
    & h1 {
      display: none;
    }
  }
}

.logo {
  display: flex;
  justify-content: center;
  align-items: center;
  text-decoration: none;
  height: 60px;
  & img {
    width: 32px;
    height: 32px;
  }
}
</style>

-------------------------------------------------------------------
components/layout/AppHeader.vue

<script setup>
import { isCollapse } from '@/components/layout/isCollapse.js'
import { useUserStore } from '@/stores/user'
const userStore = useUserStore()
import { useRouter } from 'vue-router'
const router = useRouter()

const handleLogout = () => {
  userStore.saveUser('')
  ElMessage.success('用戶已成功登出!!')
  router.push({ name: 'login' })
}
</script>
<template>
  <el-header>
    <el-icon :size="25" @click="isCollapse = !isCollapse">
      <IEpExpand v-show="isCollapse" />
      <IEpFold v-show="!isCollapse" />
    </el-icon>

    <el-breadcrumb>
      <el-breadcrumb-item v-for="(item, index) in $route.matched" :to="{ path: item.path }">{{ item.meta.title }}</el-breadcrumb-item>
    </el-breadcrumb>

    <el-dropdown>
      <span class="el-dropdown-link">
        {{ userStore.user.name }}
        <el-icon class="el-icon--right">
          <IEpArrowDown />
        </el-icon>
      </span>
      <template #dropdown>
        <el-dropdown-menu>
          <el-dropdown-item>設置</el-dropdown-item>
          <el-dropdown-item @click="handleLogout">退出</el-dropdown-item>
        </el-dropdown-menu>
      </template>
    </el-dropdown>
  </el-header>
</template>
<style scoped>
.el-header {
  display: flex;
  align-items: center;
  background-color: #607d8b;
}
.el-icon {
  margin-right: 15px;
  color: #dee1e6;
}
.el-dropdown {
  margin-left: auto;
  .el-dropdown-link {
    display: flex;
    align-items: center;
    color: #dee1e6;
    cursor: pointer;
  }
}

.el-breadcrumb :deep(.el-breadcrumb__inner) {
  color: #dee1e6;
}
</style>
@/stores/user

---------------------------------------------------------------------------------

components/layout/AppLayout.vue

<script setup>
import AppAside from '@/components/layout/AppAside.vue'
import AppHeader from '@/components/layout/AppHeader.vue'
</script>
<template>
  <div class="common-layout">
    <el-container>
      <AppAside></AppAside>
      <el-container class="containerFormat">
        <AppHeader></AppHeader>

        <el-main>
          <el-scrollbar>
            <RouterView />
          </el-scrollbar>
        </el-main>
      </el-container>
    </el-container>
  </div>
</template>
<style scoped>
.containerFormat {
  flex-direction: column;
  height: 100vh;
}
.el-main {
  padding-right: 0;
}
</style>

-----------------------------------------------------------

components/layout/isCollapse.js

export const isCollapse = ref(false)
